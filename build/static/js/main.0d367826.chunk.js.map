{"version":3,"sources":["components/register/register.module.css","components/homepage/homepage.module.css","components/login/login.module.css","components/ContactList/ContactForm/ContactForm.module.css","components/UserMenu/userMenu.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/PhoneBook/App.module.css","views/welcome.module.css","components/Loader/loader.module.css","redux/operations.js","redux/actions.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/store.js","components/register/register.js","components/login/Login.js","redux/auth/auth-selectors.js","components/UserMenu/UserMenu.js","views/welcomePage.js","components/AppBar.js","components/homepage/HomePage.js","components/PrivateRoute.js","components/ContactList/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","redux/selectors.js","components/Loader/Loader.js","components/PhoneBook/PhoneBook.js","components/PublicRoute.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","addContact","createAsyncThunk","contact","a","post","catch","error","console","log","data","getContact","get","deleteContact","contactId","delete","contactsFilter","createAction","token","headers","common","Authorization","register","credentials","alert","rejectWithValue","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","authOperations","authSlice","createSlice","name","initialState","user","email","isLoggedIn","extraReducers","fulfilled","action","payload","contactsList","createReducer","filter","id","loader","pending","rejected","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","Registration","useState","setName","setEmail","password","setPassword","dispatch","useDispatch","to","className","styles","link","container","heading","form","onSubmit","e","preventDefault","onChange","target","value","item","placeholder","input","type","button","Login","authSelectors","getIsLoggedIn","getUserEmail","UserMenu","userEmail","useSelector","onClick","Welcome","underline","AppBar","HomePage","home","exact","activeClassName","activeLink","login","PrivateRoute","redirectTo","children","routeProps","ContactForm","pattern","title","required","this","props","onChangeInputHandler","addContactHandler","Component","ContactList","filteredContacts","list","map","number","connect","label","autoComplete","getContacts","getFilter","getLoader","Loader","style","contactsArr","onAddContact","useEffect","setNumber","dublicateAlert","find","toLowerCase","length","includes","event","PublicRoute","restricted","shouldRedirect","App","path","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.0d367826.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"register_container__1A3rk\",\"link\":\"register_link__3-TzA\",\"heading\":\"register_heading___UfBi\",\"item\":\"register_item__1RghG\",\"button\":\"register_button__T5v6n\",\"input\":\"register_input__3UYL9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"homepage_home__38LQx\",\"register\":\"homepage_register__3v4-v\",\"login\":\"homepage_login__2__eW\",\"link\":\"homepage_link__rMiOG\",\"activeLink\":\"homepage_activeLink__2vPJD\",\"contacts\":\"homepage_contacts__2tJJz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"login_link__3T3DG\",\"container\":\"login_container__3BRg7\",\"item\":\"login_item__2P58p\",\"button\":\"login_button__sfHJd\",\"input\":\"login_input__13oWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2RzbR\",\"button\":\"ContactForm_button__2gUMT\",\"input\":\"ContactForm_input__3z9Ym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"userMenu_heading__18jVO\",\"container\":\"userMenu_container__1X4bh\",\"button\":\"userMenu_button__B4jWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__24KCm\",\"item\":\"ContactList_item__3xc_E\",\"button\":\"ContactList_button__3pFXl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Filter_heading__2_K-E\",\"input\":\"Filter_input__3JF4J\",\"label\":\"Filter_label__kU8eM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"App_heading__17zJv\",\"link\":\"App_link__3Hte5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"welcome_heading__3aBp0\",\"underline\":\"welcome_underline__2OMjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__3r-sv\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n// import {\r\n//     addContactsSuccess,\r\n//     addContactsError,\r\n//     addContactsRequest,\r\n//     getContactsRequest,\r\n//     getContactsError,\r\n//     getContactsSuccess,\r\n//     deleteContactsRequest,\r\n//     deleteContactsSuccess,\r\n//     deleteContactsError\r\n// } from './actions'\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n// export const addContact = (name,number) => dispatch => {\r\n//     const contacts = { name:name, number:number, }\r\n//     dispatch(addContactsRequest())\r\n//     axios\r\n//         .post('/contacts', contacts)\r\n//         .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n//         .catch(error => dispatch(addContactsError(error)))\r\n// \r\nexport const addContact = createAsyncThunk(\r\n    'contact/addContact',\r\n    async (contact) => {\r\n        const { data } = await axios.post('/contacts', contact)\r\n            .catch(error => console.log(error))\r\n        return data;\r\n    }\r\n\r\n)\r\n// export const getContact = () => dispatch => {\r\n//     dispatch(getContactsRequest())\r\n//     axios\r\n//         .get('/contacts')\r\n//         .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n//         .catch(error => dispatch(getContactsError(error)))\r\n// }\r\nexport const getContact = createAsyncThunk(\r\n    'contact/getContact',\r\n    async () => {\r\n        const { data } = await axios.get('/contacts')\r\n            .catch(error => console.log(error))\r\n        return data;\r\n    }\r\n)\r\n// export const deleteContact = id => dispatch => {\r\n//     dispatch(deleteContactsRequest())\r\n//     axios\r\n//         .delete(`/contacts/${id}`).then(() => dispatch(deleteContactsSuccess(id)))\r\n//     .catch(error => dispatch(deleteContactsError(error)))\r\n// }\r\nexport const deleteContact = createAsyncThunk(\r\n    'contact/deleteContact',\r\n    async (contactId) => {\r\n         await axios.delete(`/contacts/${contactId}`)\r\n            .catch(error => console.log(error))\r\n        return contactId\r\n    }\r\n)","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n// export const addContact = (name, number) => ({\r\n//     type: \"addContact\",\r\n//     payload: {\r\n//         name: name,\r\n//         number: number,\r\n//         id: uuidv4(),\r\n//     },\r\n// });\r\n// export const deleteContact = value => ({\r\n//     type: \"deleteContact\",\r\n//     payload: value,\r\n// })\r\n// export const contactsFilter = filter => ({\r\n//     type: 'contactsFilter',\r\n//     payload: filter,\r\n// })\r\n// export const addContactsRequest = createAction('addContacts/request');\r\n// export const addContactsSuccess = createAction('addContacts/success');\r\n// export const addContactsError = createAction('addContacts/error');\r\n// export const getContactsRequest = createAction('getContacts/request');\r\n// export const getContactsSuccess = createAction('getContacts/success');\r\n// export const getContactsError = createAction('getContacts/error');\r\n// export const deleteContactsRequest = createAction('deleteContacts/request');\r\n// export const deleteContactsSuccess = createAction('deleteContacts/success');\r\n// export const deleteContactsError = createAction('deleteContacts/error');\r\n\r\n// export const addContact = createAction('addContact', (name,number) => {\r\n//     return {\r\n//         payload: {\r\n//             name: name,\r\n//             number: number,\r\n//             id: uuidv4(),\r\n//         }\r\n//     }\r\n// }) \r\n// export const deleteContact = createAction('deleteContact');\r\nexport const contactsFilter = createAction('contactsFilter');","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n}\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credentials);\r\n        token.set(data.token)\r\n        return  data;\r\n    }\r\n    catch (error) {\r\n        alert('Проверьте правильность ввода данных')\r\n        return error.rejectWithValue();\r\n    }\r\n})\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/login', credentials);\r\n        token.set(data.token)\r\n        return data\r\n    }\r\n    catch (error) {\r\n         alert('Проверьте правильность ввода данных')\r\n        return error.rejectWithValue();\r\n    }\r\n})\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n    try {\r\n        await axios.post('/users/logout')\r\n        token.unset();\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n})\r\nconst fetchCurrentUser = createAsyncThunk(\r\n    'auth/refresh',\r\n    async (_, thunkAPI) => {\r\n        const state = thunkAPI.getState();\r\n        const persistedToken = state.auth.token;\r\n            if (persistedToken === null) {\r\n              console.log('Токена нет, уходим из fetchCurrentUser');\r\n              return thunkAPI.rejectWithValue();\r\n            }\r\n\r\n            token.set(persistedToken);\r\n            try {\r\n              const { data } = await axios.get('/users/current');\r\n              return data;\r\n            } catch (error) {\r\n              console.log(error)\r\n            }\r\n          },\r\n        ); \r\nconst authOperations = {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    fetchCurrentUser,\r\n}\r\nexport default authOperations;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authOperations from \"./auth-operations\";\r\n\r\nconst initialState = {\r\n    user: { name: null, email: null, },\r\n    token: null,\r\n    isLoggedIn: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [authOperations.register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [authOperations.logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [authOperations.logOut.fulfilled](state, action) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n        [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n             state.user = action.payload;\r\n             state.isLoggedIn = true;\r\n        }\r\n    },\r\n})\r\nexport default authSlice.reducer","// import { applyMiddleware, combineReducers } from \"redux\";\r\nimport { addContact, getContact,deleteContact } from \"./operations\";\r\nimport { getDefaultMiddleware , configureStore, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  // addContactsError,\r\n  // addContactsRequest,\r\n  // addContactsSuccess,\r\n  contactsFilter,\r\n  // deleteContact,\r\n  // deleteContactsSuccess,\r\n  // getContactsSuccess,\r\n} from \"./actions\";\r\nimport authSlice from \"./auth/auth-slice\";\r\n// const persistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n// }\r\n// const contactsList = (state = [...savedArr], { type, payload }) => {\r\n//     switch (type) {\r\n//         case 'addContact': return  [...state, payload]\r\n                \r\n//         case 'deleteContact': return state.filter(contact => contact.id !== payload)\r\n//         default: return state;\r\n            \r\n//     };\r\n// }\r\n// const contactsFilter = (state = '', { type, payload }) => {\r\n//     switch (type) {\r\n//         case 'contactsFilter': return  payload;\r\n\r\n//         default: return state;\r\n//      }\r\n// }\r\n// const contactsReducer = combineReducers({\r\n//     contacts: contactsList,\r\n//     filter: contactsFilter,\r\n// });\r\n// const store = createStore(contactsReducer, composeWithDevTools(\r\n//     applyMiddleware()));\r\nconst contactsList = createReducer([], {\r\n   [getContact.fulfilled] : (state,{payload}) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state,payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) => state.filter(contact => contact.id !== payload)\r\n});\r\nconst filter = createReducer('', {\r\n    [contactsFilter]: (_, { payload }) => payload,\r\n})\r\nconst loader = createReducer(false, {\r\n  [getContact.pending]: () => true,\r\n  [getContact.fulfilled]: () => false,\r\n  [getContact.rejected]: () => false,\r\n  \r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  \r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n})\r\n// const persistedReducer = persistReducer(persistConfig, combineReducers({\r\n//     contacts: contactsList,\r\n// }))\r\n// const myMiddleware = store => next => action => {\r\n\r\n//   console.log('прослойка')\r\n//   next(action);\r\n// }\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist : ['token'],\r\n}\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n      },\r\n    },\r\n  ),\r\n]\r\nexport const store = configureStore({\r\n    reducer: {\r\n    contacts: contactsList,\r\n    filter: filter,\r\n    loader: loader,\r\n    auth : persistReducer(authPersistConfig,authSlice),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\nexport const persistor = persistStore(store);\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authOperations from \"../../redux/auth/auth-operations\";\r\nimport styles from './register.module.css';\r\nexport default function Registration() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const inputHandler = ({target:{name,value}}) => {\r\n        switch (name) {\r\n            case 'name':\r\n                return setName(value);\r\n            case 'email': return setEmail(value);\r\n            case 'password': return setPassword(value);\r\n            default:\r\n                return;\r\n    \r\n        }\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperations.register({ name, email, password }));\r\n        setEmail('');\r\n        setName('');\r\n        setPassword('');\r\n    }\r\n    return (\r\n        <>\r\n            <NavLink to ='/' className={styles.link}>На главную</NavLink>\r\n        <div className ={styles.container}>\r\n                <h3 className={styles.heading}>Регистрация</h3>\r\n                <div className={styles.form}>\r\n                    <form onSubmit={handleSubmit} onChange={inputHandler}>\r\n                        <ul>\r\n                <li className = {styles.item}><input name ='name'   placeholder='Имя' value ={name} className ={styles.input}></input></li>\r\n                <li className = {styles.item}><input name= 'email'  placeholder='Почта' value ={email} className ={styles.input}></input></li>\r\n                <li className = {styles.item}><input name='password'  placeholder='Пароль' value ={password} className ={styles.input}></input></li>\r\n                <li className = {styles.item}><button type ='submit' className ={styles.button}>Регистрация</button></li>\r\n                </ul>\r\n                    </form>\r\n                    </div>\r\n        </div>\r\n   </> )\r\n}","import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authOperations from \"../../redux/auth/auth-operations\";\r\nimport styles from './login.module.css';\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n   const inputHandler = ({target : {name,value}}) => {\r\n       switch (name) {\r\n           case 'email':\r\n                return setEmail(value)\r\n           case 'password':\r\n               return setPassword(value)\r\n           default:\r\n               return;\r\n       }\r\n    }\r\n    const handlerSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperations.logIn({ email, password }));\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n    return (<>\r\n        <NavLink to ='/' className = {styles.link}>На главную</NavLink>\r\n        <div className ={styles.container}>\r\n            <form onChange={inputHandler} onSubmit={handlerSubmit}>\r\n                <ul>\r\n                <li className={styles.item}><input placeholder='Почта' name ='email' value ={email} className ={styles.input}></input></li>\r\n                <li className={styles.item}><input placeholder='Пароль' name = 'password' value ={password} className ={styles.input} ></input></li>\r\n                <li className={styles.item}><button type = 'submit' className ={styles.button}>Войти</button></li>\r\n                </ul>\r\n            </form>\r\n        </div>\r\n   </> )\r\n}","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUserEmail = state => state.auth.user.email;\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUserEmail\r\n}\r\nexport default authSelectors;","import authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport authOperations from \"../../redux/auth/auth-operations\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styles from './userMenu.module.css';\r\nexport default function UserMenu() {\r\n    const userEmail = useSelector(authSelectors.getUserEmail);\r\n    const dispatch = useDispatch();\r\n    return <>\r\n        <div className ={styles.container}>\r\n        <h2 className ={styles.heading}>Welcome,{userEmail}</h2>\r\n            <button type=\"button\" onClick={() => dispatch(authOperations.logOut())} className ={styles.button}>Выйти</button>\r\n            </div>\r\n    </>\r\n}","import styles from './welcome.module.css'\r\nexport default function Welcome() {\r\n    return <>\r\n        <h2 className ={styles.heading}>Привет, <span className ={styles.underline}>Незнакомец</span> !!!</h2>\r\n    </>\r\n}","import { useSelector } from \"react-redux\";\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\nimport UserMenu from \"./UserMenu/UserMenu\";\r\nimport Welcome from \"../views/welcomePage\";\r\nexport default function AppBar() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n    return <> \r\n       {isLoggedIn ? <UserMenu/> : <Welcome/>} \r\n    </>\r\n}","import { useSelector } from \"react-redux\";\r\nimport { NavLink} from \"react-router-dom\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport styles from './homepage.module.css';\r\nexport default function HomePage() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n    return <>\r\n        <div className = {styles.home}>\r\n        <NavLink to='/register' exact className ={styles.link}><p className ={styles.register}>Регистрация</p></NavLink>\r\n        <NavLink to='/login' exact className ={styles.link} activeClassName ={styles.activeLink}><p className={styles.login}>Логин</p></NavLink>\r\n            {isLoggedIn && <NavLink to='/contacts' className ={styles.link} activeClassName = {styles.activeLink}><p className ={styles.contacts}>Контакты</p></NavLink>}\r\n        </div>    \r\n        </>\r\n}","import { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\nexport default function PrivateRoute({\r\n    redirectTo = \"/\",\r\n    children,\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    )\r\n}","import { Component } from \"react\";\r\nimport styles from './ContactForm.module.css'\r\nimport PropTypes from 'prop-types';\r\nexport default class ContactForm extends Component {\r\n  render() {\r\n    return <>\r\n          <form className = {styles.form}>\r\n        <label>\r\n      <h3>Name</h3>\r\n      <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n            onChange={this.props.onChangeInputHandler}\r\n            className = {styles.input}\r\n      /></label>\r\n               <label>\r\n          <h3>Tel. number </h3>\r\n          <input\r\n  type=\"tel\"\r\n  name=\"number\"\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            \r\n            required\r\n            onChange={this.props.onChangeInputHandler}\r\n            className = {styles.input}\r\n          /></label>\r\n        <button type=\"button\" className={styles.button} onClick={this.props.addContactHandler}>Add Contact</button>\r\n      </form></>\r\n} }\r\n\r\nContactForm.propTypes = {\r\n  addContactHandler: PropTypes.func,\r\n  onChangeInputHandler: PropTypes.func,\r\n}","import styles from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\nfunction ContactList({filteredContacts, deleteContact }) {\r\n\r\n    return (<ul className={styles.list}>\r\n        {\r\n             filteredContacts.map(contact => <li key={contact.id} className={styles.item}>{contact.name} : {contact.number} \r\n                    <button onClick={() => deleteContact(contact.id)} className={styles.button}> Delete </button>\r\n            </li>)\r\n            \r\n            }\r\n    </ul> )\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.array,\r\n    deleteContact: PropTypes.func\r\n}\r\n    \r\nexport default ContactList;\r\n","import styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport { contactsFilter } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\n  function Filter({ value,contactsFilter}) {\r\n     return <label className = {styles.label}>\r\n                <h3 className = {styles.heading}>Find contacts by name</h3> \r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                autoComplete=\"off\"\r\n                onChange = {contactsFilter}\r\n             className = {styles.input}\r\n         >\r\n            </input>\r\n            </label>\r\n}\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    handleFilterChange:PropTypes.func,\r\n}\r\nconst mapDispatchTopProps = dispatch => {\r\n    return {\r\n        contactsFilter : (e) => dispatch(contactsFilter(e.target.value))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchTopProps)(Filter);","export const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\nexport const getLoader = state => state.loader;","import style from './loader.module.css';\r\nexport default function Loader() {\r\n    return <div className ={style.loader}><h2>Loading...</h2></div>\r\n}","import ContactForm from \"../ContactList/ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport { useSelector,connect,useDispatch } from \"react-redux\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport styles from './App.module.css'\r\nimport { useEffect, useState } from 'react';\r\nimport { addContact, getContact, deleteContact } from \"../../redux/operations\";\r\nimport { getContacts, getFilter, getLoader } from \"../../redux/selectors\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction PhoneBook({ onAddContact, deleteContact, contactsArr, filter,getContact,loader}) {\r\n  useEffect(() => getContact(),[getContact])\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const onChangeInputHandler = (event) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default:return\r\n    }\r\n  }\r\n  const addContactHandler = e => {\r\n    if (dublicateAlert(name)) {\r\n      return\r\n    }\r\n    else {\r\n      onAddContact(name,number)\r\n    }\r\n  }\r\n  const dublicateAlert = (name) => {\r\n    if (contactsArr.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\r\n      alert(`${name} is already in contacts`)\r\n      return true\r\n    }\r\n  }\r\n  const filteredContacts = contactsArr.length > 0 ? contactsArr.filter(contact => {\r\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n  }) : [];\r\n  return <>\r\n    <NavLink to ='/' className ={styles.link}>На главную</NavLink>\r\n    <h1 className={styles.heading} >PhoneBook</h1>\r\n    <ContactForm\r\n      onChangeInputHandler={onChangeInputHandler}\r\n      addContactHandler={addContactHandler}\r\n    />\r\n     <h3 className={styles.heading}>Contacts</h3>\r\n    <Filter\r\n    />\r\n    { loader &&\r\n      <Loader />}\r\n   <ContactList\r\n      filteredContacts={filteredContacts}\r\n      deleteContact={deleteContact}\r\n    />\r\n  </>\r\n}\r\nconst mapDispatchTopProps = dispatch => {\r\n  return {\r\n    getContact: () => dispatch(getContact()),\r\n    onAddContact: (name, number) => dispatch(addContact({ name, number } )),\r\n    deleteContact: (id) => dispatch(deleteContact(id)),\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactsArr: getContacts(state),\r\n    filter: getFilter(state),\r\n    loader : getLoader(state),\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchTopProps)(PhoneBook);","import { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\nexport default function PublicRoute({\r\n    \r\n    redirectTo,\r\n    restricted = false,\r\n    children,\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ?  <Redirect to={redirectTo} /> : children}\r\n        </Route>\r\n    )\r\n}","import { Switch, Route } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport Registration from './components/register/register';\r\nimport Login from './components/login/Login'\r\nimport AppBar from './components/AppBar';\r\nimport HomePage from './components/homepage/HomePage'\r\nimport authOperations from './redux/auth/auth-operations';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PhoneBook from './components/PhoneBook/PhoneBook';\r\nimport PublicRoute from './components/PublicRoute';\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser())\r\n  },[dispatch])\r\n  return <>\r\n    <AppBar/>\r\n    <Switch>\r\n      <PublicRoute path='/' exact ><HomePage /></PublicRoute>\r\n      <PublicRoute exact path=\"/register\" redirectTo = '/contacts' restricted ><Registration/></PublicRoute>\r\n      <PublicRoute exact path=\"/login\" redirectTo = '/contacts' restricted ><Login/></PublicRoute>\r\n      <PrivateRoute path = '/contacts' redirectTo = '/login'><PhoneBook/></PrivateRoute>\r\n    </Switch>\r\n  </>\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport { store,persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/es/integration/react';\r\nimport App from './App'\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n            <App/>\r\n            </BrowserRouter>\r\n    </PersistGate>\r\n    </Provider > ,\r\n   document.querySelector('#root'))\r\n\r\n\r\n"],"sourceRoot":""}